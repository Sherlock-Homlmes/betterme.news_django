version: "3"

services:

  # nginx:
  #   container_name: dev_web
  #   restart: on-failure
  #   image: nginx:1.19.8
  #   volumes:
  #     - ./docker/nginx/prod/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - static_volume:/main/static
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - web

  db:
    image: postgres
    volumes:
      - ./docker/postgres/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:v0.25.2
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    ports:
      - 7700:7700
    #networks:
    #  - meilisearch
    volumes:
      - ./docker/meilisearch/data.ms:/data.ms
    restart: unless-stopped

  redis:
    restart: always
    image: redis:latest
    ports:
      - 6379:6379
    entrypoint: redis-server --appendonly yes

  web:
    build: .
    #command: python manage.py runserver 0.0.0.0:8080
    #command: gunicorn --workers=2 --bind 0.0.0.0:8080 bettermenews.wsgi
    command: gunicorn --bind 0.0.0.0:8080 bettermenews.asgi -w 4 -k uvicorn.workers.UvicornWorker
    volumes:
      - .:/code
      - /static
    ports:
      - 8080:8080
    depends_on:
      - db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres


#networks:
#  meilisearch:
#    driver: bridge

volumes:
  static_volume:
  postgres_data:
